
/*==============================================================*/
/* DBMS name:      ORACLE Version 11g                           */
/* Created on:     8/15/2020 4:57:17 PM                         */
/*==============================================================*/

/*
ALTER TABLE DANH_SACH_DON_THUOC
   DROP CONSTRAINT "DUOC MUA TRONG";
ALTER TABLE DANH_SACH_DON_THUOC
   DROP CONSTRAINT CO;
ALTER TABLE DANH_SACH_SU_DUNG_DICH_VU
   DROP CONSTRAINT "DUOC SU DUNG";
ALTER TABLE DANH_SACH_SU_DUNG_DICH_VU
   DROP CONSTRAINT "SU DUNG";
ALTER TABLE DIEU_TRI
   DROP CONSTRAINT "PHU TRACH";
ALTER TABLE DIEU_TRI
   DROP CONSTRAINT "THAM GIA";
ALTER TABLE DONTHUOC
   DROP CONSTRAINT "CHI DINH ";
ALTER TABLE NHANVIEN
   DROP CONSTRAINT THUOC;
ALTER TABLE TRUC_PHONG_KHAM
   DROP CONSTRAINT TRUC;
*/


alter session set _ORACLE_SCRIPT = true;
BEGIN 
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.BENH_NHAN CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.DANH_SACH_DON_THUOC CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.DANH_SACH_SU_DUNG_DICH_VU CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.DICH_VU_KHAM_BENH CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.DIEU_TRI CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.DONTHUOC CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.NHANVIEN CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.PHONG_BAN CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.THUOC CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.TRUC_PHONG_KHAM CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.LUONG CASCADE CONSTRAINTS';
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

BEGIN 
    EXECUTE IMMEDIATE 'DROP TABLE DBA_USER.CUOC_HOP CASCADE CONSTRAINTS';
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP USER QL001';
    EXECUTE IMMEDIATE 'DROP USER QL002';
    EXECUTE IMMEDIATE 'DROP USER QL003';
    EXECUTE IMMEDIATE 'DROP USER TV001';
    EXECUTE IMMEDIATE 'DROP USER TV002';
    EXECUTE IMMEDIATE 'DROP USER KT001';
    EXECUTE IMMEDIATE 'DROP USER KT002';
    EXECUTE IMMEDIATE 'DROP USER TT001';
    EXECUTE IMMEDIATE 'DROP USER TT002';
    EXECUTE IMMEDIATE 'DROP USER BT001';
    EXECUTE IMMEDIATE 'DROP USER BT002';
    EXECUTE IMMEDIATE 'DROP USER BS001';
    EXECUTE IMMEDIATE 'DROP USER BS002';
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/  

BEGIN 
    EXECUTE IMMEDIATE 'DROP ROLE TIEP_TAN';
    EXECUTE IMMEDIATE 'DROP ROLE TAI_VU';
    EXECUTE IMMEDIATE 'DROP ROLE BAN_THUOC';
    EXECUTE IMMEDIATE 'DROP ROLE KE_TOAN';
    EXECUTE IMMEDIATE 'DROP ROLE BAC_SI';
    EXECUTE IMMEDIATE 'DROP ROLE QUAN_LI_TAI_NGUYEN';
    EXECUTE IMMEDIATE 'DROP ROLE QUAN_LI_TAI_VU';
    EXECUTE IMMEDIATE 'DROP ROLE QUAN_LI_CHUYEN_MON';
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

-- CERATE DBA_USER
CREATE USER DBA_USER IDENTIFIED BY "123";
GRANT ALL PRIVILEGES TO DBA_USER;
GRANT EXECUTE ON DBMS_RLS TO DBA_USER;
GRANT EXECUTE ON SA_AUDIT_ADMIN TO DBA_USER;
grant DBA to DBA_USER;
grant all privileges to DBA_USER;
grant select on sys.objauth$ to DBA_USER;
grant select on sys.obj$ to DBA_USER;  
grant select on sys.user$ to DBA_USER;
grant select on sys.col$ to DBA_USER;
grant select on table_privilege_map to DBA_USER;
/

ALTER USER LBACSYS ACCOUNT UNLOCK;
ALTER USER LBACSYS IDENTIFIED BY "123";
/



------------------------------------------------------------------------ CAU 1 ------------------------------------------------------------------------
conn DBA_USER/"123";
/
/*==============================================================*/
/* Table: BENH_NHAN                                             */
/*==============================================================*/
CREATE TABLE BENH_NHAN 
(
   MABENHNHAN           INT              GENERATED BY DEFAULT AS IDENTITY,
   TEN                  VARCHAR2(30),
   NAMSINH              INTEGER,
   DIACHILIENLAC        VARCHAR2(30),
   SDT                  NUMBER(13),
   TRIEUCHUNGBENH       VARCHAR2(50),
   CONSTRAINT PK_BENH_NHAN PRIMARY KEY (MABENHNHAN)
);

/*==============================================================*/
/* Table: DANH_SACH_DON_THUOC                                   */
/*==============================================================*/
CREATE TABLE DANH_SACH_DON_THUOC 
(
   ID_DANHSACHDONTHUOC  INT              GENERATED BY DEFAULT AS IDENTITY,
   MADT                 int                NOT NULL,
   MATHUOC              INT          NOT NULL,
   SOLUONG              INTEGER,
   DONGIA               INTEGER,
   CONSTRAINT PK_DANH_SACH_DON_THUOC PRIMARY KEY (ID_DANHSACHDONTHUOC)
);

/*==============================================================*/
/* Table: DANH_SACH_SU_DUNG_DICH_VU                             */
/*==============================================================*/
CREATE TABLE DANH_SACH_SU_DUNG_DICH_VU 
(
   ID_SUDUNGDICHVU      INT              GENERATED BY DEFAULT AS IDENTITY,
   MADV                 INT          NOT NULL,
   ID_DIEUTRI           INTEGER              NOT NULL,
   NGAYTHANG            DATE,
   GIATIEN              INT,
   CONSTRAINT PK_DANH_SACH_SU_DUNG_DICH_VU PRIMARY KEY (ID_SUDUNGDICHVU)
);


/*==============================================================*/
/* Table: DICH_VU_KHAM_BENH                                     */
/*==============================================================*/
CREATE TABLE DICH_VU_KHAM_BENH 
(
   MADV                 INT              GENERATED BY DEFAULT AS IDENTITY,
   TENDV                varchar(30),
   GIADV                INTEGER,
   CONSTRAINT PK_DICH_VU_KHAM_BENH PRIMARY KEY (MADV)
);

/*==============================================================*/
/* Table: DIEU_TRI                                              */
/*==============================================================*/
CREATE TABLE DIEU_TRI 
(
   ID_DIEUTRI           INT              GENERATED BY DEFAULT AS IDENTITY,
   MABENHNHAN           INT        NOT NULL,
   MANV                 INT          NOT NULL,
   THOIGIANKHAM         DATE                 NOT NULL,
   CONSTRAINT PK_DIEU_TRI PRIMARY KEY (ID_DIEUTRI)
);

/*==============================================================*/
/* Table: DONTHUOC                                              */
/*==============================================================*/
CREATE TABLE DONTHUOC 
(
   MADT                 INT              GENERATED BY DEFAULT AS IDENTITY,
   ID_DIEUTRI           INTEGER              NOT NULL,
   NGAYLAP              DATE,
   TONGGIA              INTEGER,
   CONSTRAINT PK_DONTHUOC PRIMARY KEY (MADT)
);

/*==============================================================*/
/* Table: NHANVIEN                                              */
/*==============================================================*/
CREATE TABLE NHANVIEN 
(
   MANV                 INT              GENERATED BY DEFAULT AS IDENTITY,
   MAPB                 INT          NOT NULL,
   TENNV                VARCHAR(30),
   LABACSI              INT  CHECK(LABACSI IN (0,1)),
   username             varchar(10),
   LUONGCOBAN           INT,
   PHUCAP               INT,
   CONSTRAINT PK_NHANVIEN PRIMARY KEY (MANV)
);



/*==============================================================*/
/* Table: LUONG                                      */
/*==============================================================*/
CREATE TABLE LUONG 
(
   ID_LUONG             INT              GENERATED BY DEFAULT AS IDENTITY,
   MANV                 INT                 NOT NULL,
   THANG                INT                 NULL, CHECK (THANG <= 12 AND THANG >= 1),
   NAM                  INT                 NULL, CHECK (NAM >= 0),
   SONGAYCONG           INT                 NULL,
   LUONG                INT                 NULL,     
   CONSTRAINT PK_LUONG PRIMARY KEY (ID_LUONG)
);

/*==============================================================*/
/* Table: PHONG_BAN                                             */
/*==============================================================*/
CREATE TABLE PHONG_BAN 
(
   MAPB                 INT              GENERATED BY DEFAULT AS IDENTITY,
   TENPB                VARCHAR2(20),
   CONSTRAINT PK_PHONG_BAN PRIMARY KEY (MAPB)
);

/*==============================================================*/
/* Table: THUOC                                                 */
/*==============================================================*/
CREATE TABLE THUOC 
(
   MATHUOC              INT              GENERATED BY DEFAULT AS IDENTITY,
   TENTHUOC             VARCHAR2(30),
   GIATHUOC             INTEGER,
   CONSTRAINT PK_THUOC PRIMARY KEY (MATHUOC)
);

/*==============================================================*/
/* Table: TRUC_PHONG_KHAM                                       */
/*==============================================================*/
CREATE TABLE TRUC_PHONG_KHAM 
(
   ID_TRUCPHONGKHAM     INT              GENERATED BY DEFAULT AS IDENTITY,
   MANV                 INT                 NOT NULL,
   THOIGIANBATDAUTRUC   DATE                 NOT NULL,
   CONSTRAINT PK_TRUC_PHONG_KHAM PRIMARY KEY (ID_TRUCPHONGKHAM)
);

ALTER TABLE DANH_SACH_DON_THUOC
   ADD CONSTRAINT "DUOC MUA TRONG" FOREIGN KEY (MATHUOC)
      REFERENCES THUOC (MATHUOC);

ALTER TABLE DANH_SACH_DON_THUOC
   ADD CONSTRAINT CO FOREIGN KEY (MADT)
      REFERENCES DONTHUOC (MADT)
      ON DELETE CASCADE;

ALTER TABLE DANH_SACH_SU_DUNG_DICH_VU
   ADD CONSTRAINT "DUOC SU DUNG" FOREIGN KEY (MADV)
      REFERENCES DICH_VU_KHAM_BENH (MADV)
      ON DELETE CASCADE;

ALTER TABLE DANH_SACH_SU_DUNG_DICH_VU
   ADD CONSTRAINT "SU DUNG" FOREIGN KEY (ID_DIEUTRI)
      REFERENCES DIEU_TRI (ID_DIEUTRI)
      ON DELETE CASCADE;

ALTER TABLE DIEU_TRI
   ADD CONSTRAINT "PHU TRACH" FOREIGN KEY (MANV)
      REFERENCES NHANVIEN (MANV);

ALTER TABLE DIEU_TRI
   ADD CONSTRAINT "THAM GIA" FOREIGN KEY (MABENHNHAN)
      REFERENCES BENH_NHAN (MABENHNHAN)
      ON DELETE CASCADE;

ALTER TABLE DONTHUOC
   ADD CONSTRAINT "CHI DINH " FOREIGN KEY (ID_DIEUTRI)
      REFERENCES DIEU_TRI (ID_DIEUTRI);

ALTER TABLE NHANVIEN
   ADD CONSTRAINT THUOC FOREIGN KEY (MAPB)
      REFERENCES PHONG_BAN (MAPB)
      ON DELETE CASCADE;

ALTER TABLE TRUC_PHONG_KHAM
   ADD CONSTRAINT TRUC FOREIGN KEY (MANV)
      REFERENCES NHANVIEN (MANV)
      ON DELETE CASCADE;
      
ALTER TABLE LUONG
   ADD CONSTRAINT FK_LUONG_NHANVIEN FOREIGN KEY (MANV)
      REFERENCES NHANVIEN (MANV)
      ON DELETE CASCADE;
      
      
      
      
/*==============================================================*/
/* INSERT VALUES PHONG_BAN                                      */
/*==============================================================*/
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (1,'PHONG QUAN LI');  --1
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (2,'PHONG TAI VU');   --2
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (3,'PHONG KE TOAN');  --3
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (4,'PHONG TIEP TAN'); --4
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (5,'PHONG BAN THUOC');--5
INSERT INTO PHONG_BAN(MAPB, TENPB) VALUES (6,'PHONG BAC SI');   --6
/


/*==============================================================*/
/* INSERT VALUES NHANVIEN                                       */
/*==============================================================*/
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (1,1,'QUAN LI 1',0, 'QL001',7000000, 500000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (2,1,'QUAN LI 2',0, 'QL002',7000000, 500000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (3,1,'QUAN LI 3',0, 'QL003',7000000, 500000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (4,2,'TAI VU 1',0, 'TV001', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (5,2,'TAI VU 2',0, 'TV002', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (6,3,'KE TOAN 1',0, 'KT001', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (7,3,'KE TOAN 2',0, 'KT002', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (8,4,'TIEP TAN 1',0, 'TT001', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (9,4,'TIEP TAN 2',0, 'TT002', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (10,5,'BAN THUOC 1',0, 'BT001', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (11,5,'BAN THUOC 2',0, 'BT002', 4000000, 200000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (12,6,'BAC SI 1',1, 'BS001', 10000000, 500000);
INSERT INTO NHANVIEN(MANV, MAPB, TENNV, LABACSI, username,LUONGCOBAN, PHUCAP) VALUES (13,6,'BAC SI 2',1, 'BS002', 10000000, 500000);
/

/*==============================================================*/
/* INSERT TRUC_PHONG_KHAM                                       */
/*==============================================================*/
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (5,CURRENT_DATE-7);
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (5,CURRENT_DATE-4);
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (5,CURRENT_DATE);
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (6,CURRENT_DATE-7);
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (6,CURRENT_DATE-4);
INSERT INTO TRUC_PHONG_KHAM(MANV, THOIGIANBATDAUTRUC) VALUES (6,CURRENT_DATE);
/

/*==============================================================*/
/* INSERT THUOC                                                 */
/*==============================================================*/ 
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (1, 'THUOC DAU BUNG', 5000);
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (2, 'THUOC DAU DAU', 10000);
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (3, 'THUOC CHUA HO', 20000);
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (4, 'THUOC CHUA DAU HONG', 8000);
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (5, 'THUOC CHUA CHONG MAT', 10000);
INSERT INTO THUOC(MATHUOC, TENTHUOC, GIATHUOC) VALUES (6, 'THUOC CHUA GAY XUONG', 10000);
/

/*==============================================================*/
/* INSERT DICH_VU_KHAM_BENH                                     */
/*==============================================================*/
INSERT INTO DICH_VU_KHAM_BENH(MADV, TENDV, GIADV) VALUES (1, 'X-QUANG', 10000);
INSERT INTO DICH_VU_KHAM_BENH(MADV, TENDV, GIADV) VALUES (2, 'SIEU AM', 20000);
INSERT INTO DICH_VU_KHAM_BENH(MADV, TENDV, GIADV) VALUES (3, 'NOI SOI', 30000);
INSERT INTO DICH_VU_KHAM_BENH(MADV, TENDV, GIADV) VALUES (4, 'KHAM BENH CAN BAN', 40000);

/*==============================================================*/
/* INSERT BENH_NHAN                                             */
/*==============================================================*/
INSERT INTO BENH_NHAN(MABENHNHAN, TEN, NAMSINH, DIACHILIENLAC,SDT, TRIEUCHUNGBENH) VALUES (1, 'NGUYEN VAN A', 1999, '111 Duong ABC',09090909, 'CHONG MAT');
INSERT INTO BENH_NHAN(MABENHNHAN, TEN, NAMSINH, DIACHILIENLAC,SDT, TRIEUCHUNGBENH) VALUES (2, 'NGUYEN VAN B', 1999, '111 Duong ABC',09090909, 'DAU BUNG');
INSERT INTO BENH_NHAN(MABENHNHAN, TEN, NAMSINH, DIACHILIENLAC,SDT, TRIEUCHUNGBENH) VALUES (3, 'NGUYEN VAN C', 1999, '111 Duong ABC',09090909, 'GAY XUONG');
INSERT INTO BENH_NHAN(MABENHNHAN, TEN, NAMSINH, DIACHILIENLAC,SDT, TRIEUCHUNGBENH) VALUES (4, 'NGUYEN VAN D', 1999, '111 Duong ABC',09090909, 'TAO BON');
INSERT INTO BENH_NHAN(MABENHNHAN, TEN, NAMSINH, DIACHILIENLAC,SDT, TRIEUCHUNGBENH) VALUES (5, 'NGUYEN VAN E', 1999, '111 Duong ABC',09090909, 'AN KHONG TIEU');


/*==============================================================*/
/* INSERT DIEU_TRI                                              */
/*==============================================================*/
INSERT INTO DIEU_TRI(ID_DIEUTRI, MABENHNHAN, MANV, THOIGIANKHAM) VALUES (1, 1, 12, CURRENT_DATE - 7);
INSERT INTO DIEU_TRI(ID_DIEUTRI, MABENHNHAN, MANV, THOIGIANKHAM) VALUES (2, 2, 12, CURRENT_DATE - 6);
INSERT INTO DIEU_TRI(ID_DIEUTRI, MABENHNHAN, MANV, THOIGIANKHAM) VALUES (3, 3, 13, CURRENT_DATE - 5);
INSERT INTO DIEU_TRI(ID_DIEUTRI, MABENHNHAN, MANV, THOIGIANKHAM) VALUES (4, 4, 13, CURRENT_DATE - 4);
INSERT INTO DIEU_TRI(ID_DIEUTRI, MABENHNHAN, MANV, THOIGIANKHAM) VALUES (5, 5, 12, CURRENT_DATE - 3);
/

/*==============================================================*/
/* INSERT DANH_SACH_SU_DUNG_DICH_VU                             */
/*==============================================================*/
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (4, 1, CURRENT_DATE - 7, 40000);
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (2, 2, CURRENT_DATE - 6, 20000);
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (3, 2, CURRENT_DATE - 6, 30000);
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (1, 3, CURRENT_DATE - 5, 10000);
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (4, 4, CURRENT_DATE - 4, 40000);
INSERT INTO DANH_SACH_SU_DUNG_DICH_VU(MADV, ID_DIEUTRI, NGAYTHANG, GIATIEN) VALUES (4, 5, CURRENT_DATE - 4, 40000);
/

/*==============================================================*/
/* INSERT DONTHUOC                                              */
/*==============================================================*/
INSERT INTO DONTHUOC(MADT, ID_DIEUTRI, NGAYLAP, TONGGIA) VALUES (1, 1, CURRENT_DATE - 7, 30000);
INSERT INTO DONTHUOC(MADT, ID_DIEUTRI, NGAYLAP, TONGGIA) VALUES (2, 2, CURRENT_DATE - 6, 30000);
INSERT INTO DONTHUOC(MADT, ID_DIEUTRI, NGAYLAP, TONGGIA) VALUES (3, 3, CURRENT_DATE - 5, 30000);
INSERT INTO DONTHUOC(MADT, ID_DIEUTRI, NGAYLAP, TONGGIA) VALUES (4, 4, CURRENT_DATE - 4, 15000);
INSERT INTO DONTHUOC(MADT, ID_DIEUTRI, NGAYLAP, TONGGIA) VALUES (5, 5, CURRENT_DATE - 3, 15000);
/


/*==============================================================*/
/* INSERT DANH_SACH_DON_THUOC                                   */
/*==============================================================*/
INSERT INTO DANH_SACH_DON_THUOC(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG, DONGIA) VALUES (1, 1, 5, 3, 30000);
INSERT INTO DANH_SACH_DON_THUOC(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG, DONGIA) VALUES (2, 2, 1, 3, 30000);
INSERT INTO DANH_SACH_DON_THUOC(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG, DONGIA) VALUES (3, 3, 6, 3, 30000);
INSERT INTO DANH_SACH_DON_THUOC(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG, DONGIA) VALUES (4, 1, 1, 3, 15000);
INSERT INTO DANH_SACH_DON_THUOC(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG, DONGIA) VALUES (5, 5, 1, 3, 15000);
/

/*==============================================================*/
/* INSERT LUONG                                   */
/*==============================================================*/
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (1,1, 1, 1999,28, 7500000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (2,1, 2, 1999,26, 7000000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (3,2, 1, 1999,25, 6800000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (4,2, 2, 1999,27, 7400000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (5,3, 1, 1999,29, 7500000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (6,3, 2, 1999,29, 7500000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (7,4, 1, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (8,4, 2, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (9,5, 1, 1999,27, 4000000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (10,5, 2, 1999,24, 3200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (11,6, 1, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (12,6, 2, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (13,7, 1, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (14,7, 2, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (15,8, 1, 1999,28, 4100000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (16,8, 2, 1999,28, 4100000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (17,9, 1, 1999,27, 400000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (18,9, 2, 1999,26, 3900000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (19,10, 1, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (20,10, 2, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (21,11, 1, 1999,28, 4100000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (22,11, 2, 1999,29, 4200000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (23,12, 1, 1999,29, 15000000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (24,12, 2, 1999,29, 15000000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (25,13, 1, 1999,29, 15000000);
INSERT INTO LUONG(ID_LUONG, MANV, THANG, NAM, SONGAYCONG, LUONG) VALUES (26,13, 2, 1999,29, 15000000);

-- CHI CO DONTHUOC VA NHANVIEN GHI LIEN 
-- RBAC
CREATE ROLE QUAN_LI_TAI_NGUYEN;
GRANT SELECT, INSERT, DELETE, UPDATE ON DBA_USER.PHONG_BAN TO QUAN_LI_TAI_NGUYEN;
GRANT SELECT, INSERT, DELETE, UPDATE ON DBA_USER.NHANVIEN TO QUAN_LI_TAI_NGUYEN;
GRANT SELECT, INSERT, DELETE, UPDATE ON DBA_USER.TRUC_PHONG_KHAM TO QUAN_LI_TAI_NGUYEN;
GRANT SELECT ON DBA_USER.LUONG TO QUAN_LI_TAI_NGUYEN;
/

CREATE ROLE QUAN_LI_TAI_VU;
GRANT SELECT, INSERT, UPDATE ON DBA_USER.THUOC TO QUAN_LI_TAI_VU;
GRANT SELECT, INSERT, UPDATE ON DBA_USER.DICH_VU_KHAM_BENH TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.NHANVIEN TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.DIEU_TRI TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.TRUC_PHONG_KHAM TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.PHONG_BAN TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.DONTHUOC TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.DANH_SACH_DON_THUOC TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.DANH_SACH_SU_DUNG_DICH_VU TO QUAN_LI_TAI_VU;
GRANT SELECT ON DBA_USER.LUONG TO QUAN_LI_TAI_VU;
/

CREATE ROLE QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.THUOC TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.DICH_VU_KHAM_BENH TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.NHANVIEN TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.DIEU_TRI TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.TRUC_PHONG_KHAM TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.PHONG_BAN TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.DONTHUOC TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.DANH_SACH_DON_THUOC TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.DANH_SACH_SU_DUNG_DICH_VU TO QUAN_LI_CHUYEN_MON;
GRANT SELECT ON DBA_USER.LUONG TO QUAN_LI_CHUYEN_MON;
/

create role TIEP_TAN;
grant SELECT,INSERT, DELETE, UPDATE ON DBA_USER.BENH_NHAN TO TIEP_TAN;
GRANT INSERT, SELECT,UPDATE ON DBA_USER.DIEU_TRI TO TIEP_TAN;
/

CREATE ROLE TAI_VU;
GRANT SELECT ON DBA_USER.DICH_VU_KHAM_BENH TO TAI_VU;
GRANT UPDATE(GIADV) ON DBA_USER.DICH_VU_KHAM_BENH TO TAI_VU;
GRANT SELECT ON DBA_USER.DANH_SACH_SU_DUNG_DICH_VU TO TAI_VU;
GRANT UPDATE(GIATIEN) ON DBA_USER.DANH_SACH_SU_DUNG_DICH_VU TO TAI_VU;
/

CREATE ROLE BAN_THUOC;
GRANT SELECT, UPDATE(TONGGIA) ON DBA_USER.DONTHUOC TO BAN_THUOC;
GRANT SELECT, UPDATE(DONGIA) ON DBA_USER.DANH_SACH_DON_THUOC TO BAN_THUOC;
GRANT SELECT ON DBA_USER.THUOC TO BAN_THUOC;
/

CREATE ROLE KE_TOAN;
GRANT SELECT ON DBA_USER.NHANVIEN TO KE_TOAN;
GRANT SELECT, INSERT, DELETE, UPDATE ON DBA_USER.LUONG TO KE_TOAN;
/


CREATE ROLE BAC_SI;
GRANT SELECT, UPDATE ON DBA_USER.DIEU_TRI TO BAC_SI;
GRANT SELECT, UPDATE(MADT, ID_DIEUTRI, NGAYLAP),INSERT, DELETE ON DBA_USER.DONTHUOC TO BAC_SI;
GRANT SELECT, UPDATE(ID_DANHSACHDONTHUOC, MADT, MATHUOC, SOLUONG), INSERT, DELETE ON DBA_USER.DANH_SACH_DON_THUOC TO BAC_SI;
/



-- QUAN LI
CREATE USER QL001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO QL001;
CREATE USER QL002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO QL002;
CREATE USER QL003 IDENTIFIED BY "123";
GRANT CREATE SESSION TO QL003;
/

GRANT QUAN_LI_TAI_NGUYEN TO QL001;
GRANT QUAN_LI_TAI_VU TO QL002;
GRANT QUAN_LI_CHUYEN_MON TO QL003;
/

-- TAI VU
CREATE USER TV001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO TV001;
CREATE USER TV002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO TV002;
/

GRANT TAI_VU TO TV001;
GRANT TAI_VU TO TV002;
/
-- KE TOAN
CREATE USER KT001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO KT001;
CREATE USER KT002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO KT002;
/

GRANT KE_TOAN TO KT001;
GRANT KE_TOAN TO KT002;
/

-- TIEP TAN
CREATE USER TT001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO TT001;
CREATE USER TT002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO TT002;
/


GRANT TIEP_TAN TO TT001;
GRANT TIEP_TAN TO TT002;
/
-- BAN THUOC
CREATE USER BT001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO BT001;
CREATE USER BT002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO BT002;
/

-- BAC SI
CREATE USER BS001 IDENTIFIED BY "123";
GRANT CREATE SESSION TO BS001;
CREATE USER BS002 IDENTIFIED BY "123";
GRANT CREATE SESSION TO BS002;
/


GRANT BAC_SI TO BS001;
GRANT BAC_SI TO BS002;
/

-- VPD

-- FUNC VPD TABLE DIEUTRI BACSI
CREATE OR REPLACE FUNCTION FUNC_DIEUTRI_BACSI (p_schema varchar2, p_obj varchar2)
Return varchar2
as
    MaNV INT;
    LaBacSi INT;
BEGIN
    BEGIN 
        SELECT LABACSI INTO LaBacSi
        FROM DBA_USER.NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        LaBacSi := 0;
    END;
    
    BEGIN 
        SELECT MANV INTO MaNV
        FROM DBA_USER.NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        MaNV := 0;
    END;
    if (LaBacSi = 1) then
        return 'MANV = ' || MaNV;  
    else return '1=1';
    end if;
END;
/

BEGIN
dbms_rls.Add_policy(object_schema => 'DBA_USER',
                    object_name => 'DIEU_TRI',
                    policy_name => 'BACSI_DIEUTRI_VPD',
                    function_schema => 'DBA_USER',
                    policy_function => 'FUNC_DIEUTRI_BACSI',
                    statement_types => 'SELECT, UPDATE, INSERT,DELETE',
                    update_check => TRUE );
END;
/

--BEGIN
--dbms_rls.drop_policy('DBA_USER', 'DIEU_TRI','BACSI_DIEUTRI_VPD');
--END;
--/


-- FUNC VPD TABLE DONTHUOC BACSI
CREATE OR REPLACE FUNCTION FUNC_DONTHUOC_BACSI (p_schema varchar2, p_obj varchar2)
RETURN VARCHAR2
AS 
    MaNV INT;
    LaBacSi INT;
BEGIN
    BEGIN 
        SELECT LABACSI INTO LaBacSi
        FROM NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        LaBacSi := 0;
    END;
    
    BEGIN 
        SELECT MANV INTO MaNV
        FROM NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        MaNV := 0;
    END;

    if (LaBacSi = 1 and MaNV <> 0) then
        return 'ID_DIEUTRI IN ( SELECT ID_DIEUTRI FROM DIEU_TRI WHERE MANV = ' || MaNV || ')';
    else return '1=1';
    end if;
END;
/

BEGIN
dbms_rls.Add_policy(object_schema => 'DBA_USER',
                    object_name => 'DONTHUOC',
                    policy_name => 'BACSI_DONTHUOC_VPD',
                    function_schema => 'DBA_USER',
                    policy_function => 'FUNC_DONTHUOC_BACSI',
                    statement_types => 'SELECT, UPDATE, INSERT,DELETE',
                    update_check => TRUE );
END;
/

--BEGIN
--dbms_rls.drop_policy('DBA_USER', 'DIEU_TRI','BACSI_DONTHUOC_VPD');
--END;
--/

-- FUNC VPD TABLE DANH_SACH_DON_THUOC BACSI
CREATE OR REPLACE FUNCTION FUNC_DANHSACHDONTHUOC_BACSI (p_schema varchar2, p_obj varchar2)
RETURN VARCHAR2
AS 
    MaNV INT;
    LaBacSi INT;
    MA_DT INT;
BEGIN
    BEGIN 
        SELECT LABACSI INTO LaBacSi
        FROM NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        LaBacSi := 0;
    END;
    
    BEGIN 
        SELECT MANV INTO MaNV
        FROM NHANVIEN
        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
    EXCEPTION WHEN NO_DATA_FOUND THEN
        MaNV := 0;
    END;
    
    if (LaBacSi = 1 and MaNV <> 0) then
        return 'MADT IN ( SELECT MADT FROM DONTHUOC WHERE ID_DIEUTRI IN (SELECT ID_DIEUTRI FROM DIEU_TRI WHERE MANV = ' || MaNV || '))';
    else return '1=1';
    end if;
END;
/

BEGIN
dbms_rls.Add_policy(object_schema => 'DBA_USER',
                    object_name => 'DANH_SACH_DON_THUOC',
                    policy_name => 'BACSI_DANHSACHDONTHUOC_VPD',
                    function_schema => 'DBA_USER',
                    policy_function => 'FUNC_DANHSACHDONTHUOC_BACSI',
                    statement_types => 'SELECT, UPDATE, INSERT, DELETE',
                    update_check => TRUE );
END;
/



------------------------------------------------------------------------ CAU 3 ------------------------------------------------------------------------
-- BOI CANH: BENH VIEN TACH RA 1 CHI NHANH KHAC O QUAN 10 VA 1/2 NHAN VIEN PHAI SANG DO LAM VIEC. NGOÀI RA B?NH VI?N CÓ NHU C?U L?U L?I CÁC CU?C H?P C?A CÁC NHÂN VIÊN NH?NG NH?NG THÔNG TIN C?A CU?C H?P C?A QUÁN LÍ 
-- THÌ NHÂN VIÊN KHÔNG ???C QUY?N NHÌN TH?Y, NGOÀI RA CÁC NHÂN VIÊN CH? ???C XEM THÔNG TIN NH?NG CU?C H?P THU?C PHÒNG BAN C?A MÌNH VÀ THU?C CHI NHÁNH C?A MÌNH

CREATE TABLE CUOC_HOP 
(
   MAHOP                INT              GENERATED BY DEFAULT AS IDENTITY,
   NOIDUNGHOP           VARCHAR2(200)    NOT NULL,
   MANVCHUTRI           INT              NOT NULL,
   THOIGIANHOP          DATE,
   CONSTRAINT PK_CUOCHOP PRIMARY KEY (MAHOP)
);

ALTER TABLE CUOC_HOP
   ADD CONSTRAINT FK_CUOC_HOP_NHANVIEN FOREIGN KEY (MANVCHUTRI)
      REFERENCES NHANVIEN (MANV)
      ON DELETE SET NULL;

INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (1, 'TINH LUONG Q5',CURRENT_DATE - 7, 6);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (2, 'TONG HOP LAI THANH TOAN CUA BENH NHAN Q5',CURRENT_DATE - 7, 4);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (3, 'PHO BIEN NOI DUNG TIEP DON BENH NHAN Q5',CURRENT_DATE - 7, 8);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (4, 'PHO BIEN CACH SAP XEP KE THUOC Q5',CURRENT_DATE - 7, 10);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (5, 'HOP PHAC DO DIEU TRI COVID-20 Q5',CURRENT_DATE - 7, 12);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (6, 'TINH LUONG Q10',CURRENT_DATE - 7, 7);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (7, 'TONG HOP LAI THANH TOAN CUA BENH NHAN Q10',CURRENT_DATE - 7, 5);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (8, 'PHO BIEN NOI DUNG TIEP DON BENH NHAN Q10',CURRENT_DATE - 7, 9);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (9, 'PHO BIEN CACH SAP XEP KE THUOC Q10',CURRENT_DATE - 7, 11);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (10, 'HOP PHAC DO DIEU TRI COVID-20 Q10',CURRENT_DATE - 7, 13);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (11, 'HOP NHAN SU CAP CAO Q5',CURRENT_DATE - 7, 1);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (12, 'HOP NHAN SU CAP CAO Q10',CURRENT_DATE - 7, 2);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (13, 'HOP THUONG NIEN CAP CAO GIUA CAC CHI NHANH',CURRENT_DATE - 7, 3);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (14, 'HOP THUONG NIEN BO PHAN KE TOAN GIUA CAC CHI NHANH',CURRENT_DATE - 7, 6);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (15, 'HOP THUONG NIEN BO PHAN TIEP TAN GIUA CAC CHI NHANH',CURRENT_DATE - 7, 8);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (16, 'HOP THUONG NIEN BO PHAN TAI VU GIUA CAC CHI NHANH',CURRENT_DATE - 7, 4);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (17, 'HOP THUONG NIEN BO PHAN BAN THUOC GIUA CAC CHI NHANH',CURRENT_DATE - 7, 10);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (18, 'HOP THUONG NIEN BO PHAN BAC SI GIUA CAC CHI NHANH',CURRENT_DATE - 7, 12);
INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (19, 'HOP THUONG NIEN LIEN BO PHAN GIUA CAC CHI NHANH',CURRENT_DATE - 7, 13);
--INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (20, 'HOP PHO BIEN QUI DINH CO SO QUAN 5',CURRENT_DATE - 7, 1);
--INSERT INTO CUOC_HOP(MAHOP, NOIDUNGHOP, THOIGIANHOP, MANVCHUTRI) VALUES (21, 'HOP PHO BIEN QUI DINH CO SO QUAN 10',CURRENT_DATE - 7, 1);
/

GRANT SELECT ON CUOC_HOP TO BAC_SI;
GRANT SELECT ON CUOC_HOP TO TIEP_TAN;
GRANT SELECT ON CUOC_HOP TO TAI_VU;
GRANT SELECT ON CUOC_HOP TO BAN_THUOC;
GRANT SELECT ON CUOC_HOP TO KE_TOAN;
GRANT SELECT ON CUOC_HOP TO QUAN_LI_TAI_NGUYEN;
GRANT SELECT ON CUOC_HOP TO QUAN_LI_TAI_VU;
GRANT SELECT ON CUOC_HOP TO QUAN_LI_CHUYEN_MON;
/

DISCONNECT;


CONN LBACSYS/"123";

begin 
    sa_sysdba.drop_policy
    (
        policy_name => 'HOP_OLS',
        drop_column => TRUE
    );
end;
/

BEGIN
    sa_sysdba.create_policy
    (
        policy_name => 'HOP_OLS',
        column_name => 'rowlabel'
    );
END;
/
-- KHI POLICY DUOC TAO THI SE CO 1 ROLE VOI FORMAT [POLICY_NAME]_DBA DUOC TAO RA
-- ?O?N CODE NÀY NÊN LOG IN VÀO SQL PLUS B?NG ACCOUNT LBACSYS/"123" VÀ CHÉP ?O?N CODE GRANT D??I ?O?N COMMENT NÀY ?? DBA_USER CÓ ???C NH?NG QUY?N C?N THI?T
GRANT HOP_OLS_DBA TO DBA_USER;
GRANT EXECUTE ON sa_components TO DBA_USER;
GRANT EXECUTE ON sa_label_admin TO DBA_USER;
GRANT EXECUTE ON sa_user_admin TO DBA_USER;
GRANT EXECUTE ON char_to_label TO DBA_USER;
/

DISCONNECT;

CONN DBA_USER/"123";

-- CREATE LEVEL

begin
sa_components.DROP_LEVEL
(
    policy_name => 'HOP_OLS',
    short_name => 'QL'
);
EXCEPTION WHEN OTHERS THEN NULL; 
end;
/

begin
sa_components.DROP_LEVEL
(
    policy_name => 'HOP_OLS',
    short_name => 'NV'
);
EXCEPTION WHEN OTHERS THEN NULL; 
end;
/

begin
sa_components.create_level
(
    policy_name => 'HOP_OLS',
    long_name => 'QUAN_LI',
    short_name => 'QL',
    level_num => 9000
);
end;
/

begin
sa_components.create_level
(
    policy_name => 'HOP_OLS',
    long_name => 'NHAN_VIEN',
    short_name => 'NV',
    level_num => 8000
);
end;
/


-- CREATE COMPARTMENT

--------------------------------------------------
------ DROP COMPARTMENT FIRST --------------------
--------------------------------------------------

BEGIN
    SA_COMPONENTS.DROP_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            comp_num => 4000
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/
BEGIN
    SA_COMPONENTS.DROP_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            comp_num => 3500
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/
BEGIN
    SA_COMPONENTS.DROP_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            comp_num => 3000
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

BEGIN
    SA_COMPONENTS.DROP_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            comp_num => 2500
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

BEGIN
    SA_COMPONENTS.DROP_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            comp_num => 2000
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

--------------------------------------------------
--------------------------------------------------
--------------------------------------------------


BEGIN
    SA_COMPONENTS.CREATE_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            long_name => 'BAC_SI',
            short_name => 'BS',
            comp_num => 4000
    );
END;
/

BEGIN
    SA_COMPONENTS.CREATE_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            long_name => 'TAI_VU',
            short_name => 'TV',
            comp_num => 3500
    );
END;
/
BEGIN
    SA_COMPONENTS.CREATE_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            long_name => 'TIEP_TAN',
            short_name => 'TT',
            comp_num => 3000
    );
END;
/
BEGIN
    SA_COMPONENTS.CREATE_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            long_name => 'BAN_THUOC',
            short_name => 'BT',
            comp_num => 2500
    );
END;
/
BEGIN
    SA_COMPONENTS.CREATE_COMPARTMENT
    (
            policy_name => 'HOP_OLS',
            long_name => 'KE_TOAN',
            short_name => 'KT',
            comp_num => 2000
    );
END;
/

-- CREATE GROUP 

--------------------------------------------------
------ DROP GROUP FIRST --------------------------
--------------------------------------------------
BEGIN
    SA_COMPONENTS.DROP_GROUP
    (
            policy_name => 'HOP_OLS',
            group_num   => 200
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/
BEGIN
    SA_COMPONENTS.DROP_GROUP
    (
            policy_name => 'HOP_OLS',
            group_num   => 100
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------

BEGIN
    SA_COMPONENTS.CREATE_GROUP
    (
            policy_name => 'HOP_OLS',
            long_name => 'QUAN_5',
            short_name => 'Q5',
            group_num  => 200
    );
END;
/

BEGIN
    SA_COMPONENTS.CREATE_GROUP
    (
            policy_name => 'HOP_OLS',
            long_name => 'QUAN_10',
            short_name => 'Q10',
            group_num  => 100
    );
END;
/

-- CREATE LABEL

--------------------------------------------------
------ DROP LABEL FIRST --------------------------
--------------------------------------------------
BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'QL:BS,TV,KT,BT,TT:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL; 
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'QL:BS,TV,KT,BT,TT:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:BS:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:BS:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:KT:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:KT:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:TT:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:TT:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:BT:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:BT:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:TV:Q5'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/
BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV:TV:Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

BEGIN
    sa_label_admin.DROP_LABEL
    (
        policy_name => 'HOP_OLS',
        label_value => 'NV::Q5,Q10'
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/


-------------------------------------------
--------------------------------------------
----------------------------------------------


BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 1,
        label_value => 'QL:BS,TV,KT,BT,TT:Q5'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 2,
        label_value => 'QL:BS,TV,KT,BT,TT:Q10'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 3,
        label_value => 'NV:BS:Q5'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 4,
        label_value => 'NV:BS:Q10'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 5,
        label_value => 'NV:KT:Q5'
    );
END;
/
BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 6,
        label_value => 'NV:KT:Q10'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 7,
        label_value => 'NV:TT:Q5'
    );
END;
/
BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 8,
        label_value => 'NV:TT:Q10'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 9,
        label_value => 'NV:BT:Q5'
    );
END;
/
BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 10,
        label_value => 'NV:BT:Q10'
    );
END;
/


BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 11,
        label_value => 'NV:TV:Q5'
    );
END;
/
BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 12,
        label_value => 'NV:TV:Q10'
    );
END;
/

BEGIN
    sa_label_admin.create_label
    (
        policy_name => 'HOP_OLS',
        label_tag => 13,
        label_value => 'NV::Q5,Q10'
    );
END;
/

--------------------------------------
-- ÁP D?NG CHÍNH SÁCH
--------------------------------------

--- DROP FIRST
BEGIN
    SA_POLICY_ADMIN.REMOVE_TABLE_POLICY
    (
        policy_name  => 'HOP_OLS',
        schema_name => 'DBA_USER',
        table_name => 'CUOC_HOP',
        drop_column => TRUE
    );
    EXCEPTION WHEN OTHERS THEN NULL;
END;
/

-----------------------------

BEGIN
    SA_POLICY_ADMIN.APPLY_TABLE_POLICY
    (
        policy_name  => 'HOP_OLS',
        schema_name => 'DBA_USER',
        table_name => 'CUOC_HOP',
        table_options => 'NO_CONTROL'
    );
END;
/

-------------------------------------------------------------
----- GÁN NHÃN CHO T?NG DÒNG D? LI?U B?NG CÂU UPDATE --------
-------------------------------------------------------------

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:KT:Q5')
WHERE MAHOP = 1;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TV:Q5')
WHERE MAHOP = 2;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TT:Q5')
WHERE MAHOP = 3;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BT:Q5')
WHERE MAHOP = 4;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BS:Q5')
WHERE MAHOP = 5;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:KT:Q10')
WHERE MAHOP = 6;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TV:Q10')
WHERE MAHOP = 7;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TT:Q10')
WHERE MAHOP = 8;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BT:Q10')
WHERE MAHOP = 9;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BS:Q10')
WHERE MAHOP = 10;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','QL:BS,TV,KT,BT,TT:Q5')
WHERE MAHOP = 11;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','QL:BS,TV,KT,BT,TT:Q10')
WHERE MAHOP = 12;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','QL')
WHERE MAHOP = 13;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:KT')
WHERE MAHOP = 14;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TT')
WHERE MAHOP = 15;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:TV')
WHERE MAHOP = 16;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BT')
WHERE MAHOP = 17;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:BS')
WHERE MAHOP = 18;

UPDATE DBA_USER.CUOC_HOP
SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV::Q5,Q10')
WHERE MAHOP = 19;

SELECT MAHOP, NOIDUNGHOP, LABEL_TO_CHAR(ROWLABEL) FROM DBA_USER.CUOC_HOP;
--UPDATE DBA_USER.CUOC_HOP
--SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:Q5')
--WHERE MAHOP = 20;
--
--UPDATE DBA_USER.CUOC_HOP
--SET ROWLABEL = CHAR_TO_LABEL('HOP_OLS','NV:Q10')
--WHERE MAHOP = 21;

-------------------------------------------------------------
----- GÁN NHÃN CHO CÁC USER ---------------------------------
-------------------------------------------------------------
-- QUAN LI 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'QL001',
        max_read_label => 'QL:BS,TV,KT,BT,TT:Q5'
    );
END;
/

-- QUAN LI 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'QL002',
        max_read_label => 'QL:BS,TV,KT,BT,TT:Q10'
    );
END;
/

-- QUAN LI 3
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'QL003',
        max_read_label => 'QL:BS,TV,KT,BT,TT:Q5'
    );
END;
/

-- TAI VU 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'TV001',
        max_read_label => 'NV:TV:Q5'
    );
END;
/

-- TAI VU 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'TV002',
        max_read_label => 'NV:TV:Q10'
    );
END;
/

-- KE TOAN 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'KT001',
        max_read_label => 'NV:KT:Q5'
    );
END;
/

-- KE TOAN 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'KT002',
        max_read_label => 'NV:KT:Q10'
    );
END;
/

-- TIEP TAN 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'TT001',
        max_read_label => 'NV:TT:Q5'
    );
END;
/

-- TIEP TAN 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'TT002',
        max_read_label => 'NV:TT:Q10'
    );
END;
/

-- BAN THUOC 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'BT001',
        max_read_label => 'NV:BT:Q5'
    );
END;
/

-- BAN THUOC 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'BT002',
        max_read_label => 'NV:BT:Q10'
    );
END;
/

-- BAC SI 1
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'BS001',
        max_read_label => 'NV:BS:Q5'
    );
END;
/

-- BAC SI 2
BEGIN
    sa_user_admin.set_user_labels
    (
        policy_name => 'HOP_OLS',
        user_name => 'BS002',
        max_read_label => 'NV:BS:Q10'
    );
END;
/

--- ??I OPTION TABLE CONTROL THÀNH READ - CONTROL
BEGIN 
    SA_POLICY_ADMIN.REMOVE_TABLE_POLICY -- DROP COLUMN DEFAULT = FALSE
    (
        policy_name => 'HOP_OLS',
        schema_name => 'DBA_USER',
        table_name => 'CUOC_HOP' 
    );
END;
/

BEGIN 
    SA_POLICY_ADMIN.APPLY_TABLE_POLICY
    (
        policy_name => 'HOP_OLS',
        schema_name => 'DBA_USER',
        table_name => 'CUOC_HOP',
        table_options => 'READ_CONTROL'
    );
END;
/

DISCONNECT

-- OLS

--
--BEGIN
--dbms_rls.drop_policy('DBA_USER', 'DANH_SACH_DON_THUOC','BACSI_DANHSACHDONTHUOC_VPD');
--END;
--/

--CREATE OR REPLACE FUNCTION FUNC_NHANVIEN_PRIV (p_schema varchar2, p_obj varchar2)
--RETURN VARCHAR2
--AS
--    MaNV INT;
--    user varchar(100);
--BEGIN 
--    BEGIN 
--        SELECT MANV INTO MaNV
--        FROM NHANVIEN
--        WHERE username = SYS_CONTEXT('USERENV','SESSION_USER');
--    EXCEPTION WHEN NO_DATA_FOUND THEN
--        MaNV := 0;
--    END;
--    
--    if (MaNV <> 0) then
--        return 'MANV = '|| MaNV;
--    else
--        return '1=1';
--    end if;
--END;
--/
--BEGIN
--dbms_rls.Add_policy(object_schema => 'DBA_USER',
--                    object_name => 'NHANVIEN',
--                    policy_name => 'ALL_PRIV_NHANVIEN_VPD',
--                    function_schema => 'DBA_USER',
--                    policy_function => 'FUNC_NHANVIEN_PRIV',
--                    statement_types => 'SELECT, UPDATE, INSERT, DELETE',
--                    update_check => TRUE,
--                    sec_relevant_cols => 'LUONGCOBAN',
--                    sec_relevant_cols_opt =>dbms.ALL_ROWS
--                   );
--END;
--/


--            
--BEGIN 
--
--dbms_rls.drop_policy(object_schema => 'DBA_USER',
--                     object_name => 'NHANVIEN',
--                     policy_name => 'ALL_PRIV_NHANVIEN_VPD');
--END;
--/            
    








-- TAO CONTEXT CODE

--drop package SET_EMP_ENV;
--CREATE OR REPLACE PACKAGE SET_EMP_ENV AS
--    PROCEDURE SET_JOB_POSITION;
--END SET_EMP_ENV;
--/
--
--CREATE OR REPLACE PACKAGE BODY SET_EMP_ENV AS
--    PROCEDURE SET_JOB_POSITION AS JP INT;
--    BEGIN
--        SELECT MAPB INTO JP
--        FROM NHANVIEN
--        WHERE username = SYS_CONTEXT('USERENV', 'SESSION_USER');
--        DBMS_SESSION.SET_CONTEXT('emp_env','job',jp);
--    END;
--END SET_EMP_ENV;
--/
--
----drop CONTEXT emp_env;
--CREATE OR REPLACE CONTEXT emp_env USING SET_EMP_ENV;
--
----drop trigger Emp_trig;
--CREATE OR REPLACE TRIGGER Emp_trig AFTER LOGON ON DATABASE
--BEGIN 
--    SET_EMP_ENV.SET_JOB_POSITION;
--END;
--/
